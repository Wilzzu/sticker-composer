{
  "version": 3,
  "sources": ["../bundle-zNybV1/checked-fetch.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../../../node_modules/wrangler/templates/middleware/loader-sw.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-zNybV1/middleware-insertion-facade.js", "../../../backend/worker.js"],
  "sourceRoot": "E:\\DOCUMENTS\\sticker-compose\\sticker-composer\\.wrangler\\tmp\\dev-9zRlSL",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t  );\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "import {\n\t__facade_invoke__,\n\t__facade_register__,\n\t__facade_registerInternal__,\n\tAwaitable,\n\tDispatcher,\n\tIncomingRequest,\n\tMiddleware,\n} from \"./common\";\n\nexport { __facade_register__, __facade_registerInternal__ };\n\n// Miniflare 2's `EventTarget` follows the spec and doesn't allow exceptions to\n// be caught by `dispatchEvent`. Instead it has a custom `ThrowingEventTarget`\n// class that rethrows errors from event listeners in `dispatchEvent`.\n// We'd like errors to be propagated to the top-level `addEventListener`, so\n// we'd like to use `ThrowingEventTarget`. Unfortunately, `ThrowingEventTarget`\n// isn't exposed on the global scope, but `WorkerGlobalScope` (which extends\n// `ThrowingEventTarget`) is. Therefore, we get at it in this nasty way.\nlet __FACADE_EVENT_TARGET__: EventTarget;\nif ((globalThis as any).MINIFLARE) {\n\t__FACADE_EVENT_TARGET__ = new (Object.getPrototypeOf(WorkerGlobalScope))();\n} else {\n\t__FACADE_EVENT_TARGET__ = new EventTarget();\n}\n\nfunction __facade_isSpecialEvent__(\n\ttype: string\n): type is \"fetch\" | \"scheduled\" {\n\treturn type === \"fetch\" || type === \"scheduled\";\n}\nconst __facade__originalAddEventListener__ = globalThis.addEventListener;\nconst __facade__originalRemoveEventListener__ = globalThis.removeEventListener;\nconst __facade__originalDispatchEvent__ = globalThis.dispatchEvent;\n\nglobalThis.addEventListener = function (type, listener, options) {\n\tif (__facade_isSpecialEvent__(type)) {\n\t\t__FACADE_EVENT_TARGET__.addEventListener(\n\t\t\ttype,\n\t\t\tlistener as EventListenerOrEventListenerObject,\n\t\t\toptions\n\t\t);\n\t} else {\n\t\t__facade__originalAddEventListener__(type, listener, options);\n\t}\n};\nglobalThis.removeEventListener = function (type, listener, options) {\n\tif (__facade_isSpecialEvent__(type)) {\n\t\t__FACADE_EVENT_TARGET__.removeEventListener(\n\t\t\ttype,\n\t\t\tlistener as EventListenerOrEventListenerObject,\n\t\t\toptions\n\t\t);\n\t} else {\n\t\t__facade__originalRemoveEventListener__(type, listener, options);\n\t}\n};\nglobalThis.dispatchEvent = function (event) {\n\tif (__facade_isSpecialEvent__(event.type)) {\n\t\treturn __FACADE_EVENT_TARGET__.dispatchEvent(event);\n\t} else {\n\t\treturn __facade__originalDispatchEvent__(event);\n\t}\n};\n\ndeclare global {\n\tvar addMiddleware: typeof __facade_register__;\n\tvar addMiddlewareInternal: typeof __facade_registerInternal__;\n}\nglobalThis.addMiddleware = __facade_register__;\nglobalThis.addMiddlewareInternal = __facade_registerInternal__;\n\nconst __facade_waitUntil__ = Symbol(\"__facade_waitUntil__\");\nconst __facade_response__ = Symbol(\"__facade_response__\");\nconst __facade_dispatched__ = Symbol(\"__facade_dispatched__\");\n\nclass __Facade_ExtendableEvent__ extends Event {\n\t[__facade_waitUntil__]: Awaitable<unknown>[] = [];\n\n\twaitUntil(promise: Awaitable<any>) {\n\t\tif (!(this instanceof __Facade_ExtendableEvent__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\tthis[__facade_waitUntil__].push(promise);\n\t}\n}\n\ninterface FetchEventInit extends EventInit {\n\trequest: Request;\n\tpassThroughOnException: FetchEvent[\"passThroughOnException\"];\n}\n\nclass __Facade_FetchEvent__ extends __Facade_ExtendableEvent__ {\n\t#request: Request;\n\t#passThroughOnException: FetchEvent[\"passThroughOnException\"];\n\t[__facade_response__]?: Awaitable<Response>;\n\t[__facade_dispatched__] = false;\n\n\tconstructor(type: \"fetch\", init: FetchEventInit) {\n\t\tsuper(type);\n\t\tthis.#request = init.request;\n\t\tthis.#passThroughOnException = init.passThroughOnException;\n\t}\n\n\tget request() {\n\t\treturn this.#request;\n\t}\n\n\trespondWith(response: Awaitable<Response>) {\n\t\tif (!(this instanceof __Facade_FetchEvent__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\tif (this[__facade_response__] !== undefined) {\n\t\t\tthrow new DOMException(\n\t\t\t\t\"FetchEvent.respondWith() has already been called; it can only be called once.\",\n\t\t\t\t\"InvalidStateError\"\n\t\t\t);\n\t\t}\n\t\tif (this[__facade_dispatched__]) {\n\t\t\tthrow new DOMException(\n\t\t\t\t\"Too late to call FetchEvent.respondWith(). It must be called synchronously in the event handler.\",\n\t\t\t\t\"InvalidStateError\"\n\t\t\t);\n\t\t}\n\t\tthis.stopImmediatePropagation();\n\t\tthis[__facade_response__] = response;\n\t}\n\n\tpassThroughOnException() {\n\t\tif (!(this instanceof __Facade_FetchEvent__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#passThroughOnException();\n\t}\n}\n\ninterface ScheduledEventInit extends EventInit {\n\tscheduledTime: number;\n\tcron: string;\n\tnoRetry: ScheduledEvent[\"noRetry\"];\n}\n\nclass __Facade_ScheduledEvent__ extends __Facade_ExtendableEvent__ {\n\t#scheduledTime: number;\n\t#cron: string;\n\t#noRetry: ScheduledEvent[\"noRetry\"];\n\n\tconstructor(type: \"scheduled\", init: ScheduledEventInit) {\n\t\tsuper(type);\n\t\tthis.#scheduledTime = init.scheduledTime;\n\t\tthis.#cron = init.cron;\n\t\tthis.#noRetry = init.noRetry;\n\t}\n\n\tget scheduledTime() {\n\t\treturn this.#scheduledTime;\n\t}\n\n\tget cron() {\n\t\treturn this.#cron;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledEvent__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\n__facade__originalAddEventListener__(\"fetch\", (event) => {\n\tconst ctx: ExecutionContext = {\n\t\twaitUntil: event.waitUntil.bind(event),\n\t\tpassThroughOnException: event.passThroughOnException.bind(event),\n\t};\n\n\tconst __facade_sw_dispatch__: Dispatcher = function (type, init) {\n\t\tif (type === \"scheduled\") {\n\t\t\tconst facadeEvent = new __Facade_ScheduledEvent__(\"scheduled\", {\n\t\t\t\tscheduledTime: Date.now(),\n\t\t\t\tcron: init.cron ?? \"\",\n\t\t\t\tnoRetry() {},\n\t\t\t});\n\n\t\t\t__FACADE_EVENT_TARGET__.dispatchEvent(facadeEvent);\n\t\t\tevent.waitUntil(Promise.all(facadeEvent[__facade_waitUntil__]));\n\t\t}\n\t};\n\n\tconst __facade_sw_fetch__: Middleware = function (request, _env, ctx) {\n\t\tconst facadeEvent = new __Facade_FetchEvent__(\"fetch\", {\n\t\t\trequest,\n\t\t\tpassThroughOnException: ctx.passThroughOnException,\n\t\t});\n\n\t\t__FACADE_EVENT_TARGET__.dispatchEvent(facadeEvent);\n\t\tfacadeEvent[__facade_dispatched__] = true;\n\t\tevent.waitUntil(Promise.all(facadeEvent[__facade_waitUntil__]));\n\n\t\tconst response = facadeEvent[__facade_response__];\n\t\tif (response === undefined) {\n\t\t\tthrow new Error(\"No response!\"); // TODO: proper error message\n\t\t}\n\t\treturn response;\n\t};\n\n\tevent.respondWith(\n\t\t__facade_invoke__(\n\t\t\tevent.request as IncomingRequest,\n\t\t\tglobalThis,\n\t\t\tctx,\n\t\t\t__facade_sw_dispatch__,\n\t\t\t__facade_sw_fetch__\n\t\t)\n\t);\n});\n\n__facade__originalAddEventListener__(\"scheduled\", (event) => {\n\tconst facadeEvent = new __Facade_ScheduledEvent__(\"scheduled\", {\n\t\tscheduledTime: event.scheduledTime,\n\t\tcron: event.cron,\n\t\tnoRetry: event.noRetry.bind(event),\n\t});\n\n\t__FACADE_EVENT_TARGET__.dispatchEvent(facadeEvent);\n\tevent.waitUntil(Promise.all(facadeEvent[__facade_waitUntil__]));\n});\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\nexport const wrap = undefined;\n", "import { __facade_registerInternal__ } from \"E:\\\\DOCUMENTS\\\\sticker-compose\\\\sticker-composer\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\loader-sw.ts\";\nimport * as __MIDDLEWARE_0__ from \"E:\\\\DOCUMENTS\\\\sticker-compose\\\\sticker-composer\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n__facade_registerInternal__([__MIDDLEWARE_0__.default])", "addEventListener(\"fetch\", (event) => {\r\n  event.respondWith(handleRequest(event.request))\r\n})\r\n\r\nasync function handleRequest(request) {\r\n  // Set CORS headers\r\n  const corsHeaders = {\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n    \"Access-Control-Allow-Methods\": \"GET, HEAD, POST, OPTIONS\",\r\n    \"Access-Control-Allow-Headers\": \"Content-Type\",\r\n  }\r\n\r\n  if (request.method === \"GET\") {\r\n    const url = new URL(request.url)\r\n\r\n    const input = url.searchParams.get(\"input\").toLowerCase()\r\n\r\n    const isBackwards = url.searchParams.get(\"isBackwards\") === \"true\"\r\n    const isDepth = url.searchParams.get(\"isDepth\") === \"true\"\r\n\r\n    let results = []\r\n    if (isDepth) {\r\n      results = await depthSearch(input)\r\n    } else {\r\n      results = await mainSearch(input, isBackwards)\r\n    }\r\n\r\n    return new Response(JSON.stringify(results), {\r\n      headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\r\n    })\r\n  } else {\r\n    return new Response(\"Method not allowed\", {\r\n      status: 405,\r\n      headers: corsHeaders,\r\n    })\r\n  }\r\n}\r\n\r\nasync function mainSearch(input, isBackwards) {\r\n  // The original Search Method\r\n\r\n  const data = await getStickers()\r\n\r\n  let results = []\r\n  let remainingInput = input\r\n  let iterations = 0\r\n  let filteredItems = []\r\n\r\n  while (remainingInput.length > 0 && iterations < 5) {\r\n    let foundMatch = false\r\n    let matchPart = \"\"\r\n    // Reset filteredItems at the start of each iteration\r\n    filteredItems = []\r\n\r\n    for (let length = remainingInput.length; length >= 1; length--) {\r\n      const partialInput = isBackwards\r\n        ? remainingInput.slice(-length)\r\n        : remainingInput.substring(0, length)\r\n\r\n      filteredItems = data.filter((item) => {\r\n        item.matching ? console.log(item) : \"\"\r\n        // Determine the string to match against (either item.matching or the middle part of the sticker name)\r\n        const matchAgainst = item.matching\r\n          ? item.matching.toLowerCase()\r\n          : item.name\r\n              .split(\"|\")\r\n              .map((part) => part.trim())[1]\r\n              .toLowerCase()\r\n        const middlePartMain = matchAgainst.split(\" \")[0]\r\n\r\n        return isBackwards\r\n          ? middlePartMain.endsWith(partialInput)\r\n          : middlePartMain.startsWith(partialInput)\r\n      })\r\n\r\n      if (filteredItems.length > 0) {\r\n        foundMatch = true\r\n        matchPart = partialInput\r\n        remainingInput = isBackwards\r\n          ? remainingInput.slice(0, -length)\r\n          : remainingInput.substring(length)\r\n        break\r\n      }\r\n    }\r\n\r\n    if (foundMatch) {\r\n      results.push({\r\n        matchedPart: matchPart,\r\n        stickers: filteredItems.map((item) => ({\r\n          name: item.name,\r\n          image: item.image,\r\n        })),\r\n      })\r\n    }\r\n\r\n    if (!foundMatch || remainingInput.length === 0) {\r\n      break\r\n    }\r\n\r\n    iterations++\r\n  }\r\n\r\n  // have to nest it one deeper\r\n  return isBackwards ? [results.reverse()] : [results]\r\n}\r\n\r\nasync function depthSearch(input) {\r\n  class Token {\r\n    static START = \"START\"\r\n    static END = \"END\"\r\n    static MID = \"MID\"\r\n    static TOTAL = \"TOTAL\"\r\n\r\n    constructor(location, text) {\r\n      this.location = location\r\n      this.text = text\r\n    }\r\n\r\n    static stringifyToken(location, text) {\r\n      return `'<Token:${location}:${text}>'`\r\n    }\r\n    stringifySelf() {\r\n      return `'<Token:${this.location}:${this.text}>'`\r\n    }\r\n  }\r\n\r\n  // Functions\r\n  // group letters into all possible substring groupings\r\n  function groupLetters(word) {\r\n    let result = []\r\n\r\n    function backtrack(start, current, result) {\r\n      if (start === word.length) {\r\n        result.push(current)\r\n        return\r\n      }\r\n      for (let end = start + 1; end <= word.length; end++) {\r\n        backtrack(end, current.concat([word.substring(start, end)]), result)\r\n      }\r\n    }\r\n\r\n    backtrack(0, [], result)\r\n    return result\r\n  }\r\n\r\n  // add each possible localization to each token\r\n  function getTokensWithEachLoc(groupedLetters) {\r\n    function aplit(token) {\r\n      /**\r\n       * Get all possible token locations for each token in each string split.\r\n       */\r\n      let tokenPossibilities = []\r\n      let tokenLocations = [Token.START, Token.END, Token.MID, Token.TOTAL]\r\n      tokenLocations.forEach((tokenLoc) => {\r\n        tokenPossibilities.push(new Token(tokenLoc, token))\r\n      })\r\n      return tokenPossibilities\r\n    }\r\n\r\n    let allPossibleForEachTok = []\r\n    groupedLetters.forEach((token) => {\r\n      allPossibleForEachTok.push(aplit(token))\r\n    })\r\n    return allPossibleForEachTok\r\n  }\r\n\r\n  // Get all permutations of the tokens treating differntly localized tokens as different\r\n  function cartesianProduct(localizedTokenGroups) {\r\n    // Recursive function to generate the cartesian product\r\n    function cartesianHelper(inputArrays, output, currentIndex) {\r\n      if (currentIndex === inputArrays.length) {\r\n        result.push([...output])\r\n        return\r\n      }\r\n\r\n      for (let i = 0; i < inputArrays[currentIndex].length; i++) {\r\n        output[currentIndex] = inputArrays[currentIndex][i]\r\n        cartesianHelper(inputArrays, output, currentIndex + 1)\r\n      }\r\n    }\r\n\r\n    const result = []\r\n    cartesianHelper(localizedTokenGroups, [], 0)\r\n    return result\r\n  }\r\n  // only certain token localizations can be next to each other to spell words without gaps\r\n  function checkViability(prevToken, potentialNextToken) {\r\n    if (potentialNextToken.location === Token.TOTAL) {\r\n      return (\r\n        prevToken.location === Token.START ||\r\n        prevToken.location === Token.END ||\r\n        prevToken.location === Token.MID ||\r\n        prevToken.location === Token.TOTAL\r\n      )\r\n    }\r\n    if (potentialNextToken.location === Token.MID) {\r\n      return (\r\n        prevToken.location === Token.END || prevToken.location === Token.TOTAL\r\n      )\r\n    }\r\n    if (potentialNextToken.location === Token.START) {\r\n      return (\r\n        prevToken.location === Token.START ||\r\n        prevToken.location === Token.END ||\r\n        prevToken.location === Token.MID ||\r\n        prevToken.location === Token.TOTAL\r\n      )\r\n    }\r\n    if (potentialNextToken.location === Token.END) {\r\n      return (\r\n        prevToken.location === Token.END || prevToken.location === Token.TOTAL\r\n      )\r\n    }\r\n  }\r\n\r\n  function stickerfyWord(word, tokenizationMap) {\r\n    // Get all possible string splits with less than 5 tokens(stickers)\r\n    const groupings = groupLetters(word).filter((group) => group.length <= 5)\r\n\r\n    const results = []\r\n\r\n    for (const group of groupings) {\r\n      const groupingWithLoc = getTokensWithEachLoc(group)\r\n      const allGroupingPermutations = cartesianProduct(groupingWithLoc)\r\n\r\n      // Filtering Possibilities\r\n      const idxToKeep = []\r\n      for (\r\n        let comboIdx = 0;\r\n        comboIdx < allGroupingPermutations.length;\r\n        comboIdx++\r\n      ) {\r\n        // A Single Combination Example [\"ap\",\"pl\",\"e\"] or [\"ap\",\"pl\", \"e\"] with different locations\r\n        // At this point these strings are instances of the Token class and also have spacial information\r\n        /*  [Token { location: \"START\", text: \"appl\" },Token { location: \"START\", text: \"e\" }], */\r\n        const combo = allGroupingPermutations[comboIdx]\r\n\r\n        let status = true\r\n        // If the required tokens are > 5 the sticker combo is not possible\r\n        if (combo.length > 5) {\r\n          continue\r\n        }\r\n\r\n        for (let i = 0; i < combo.length; i++) {\r\n          if (i - 1 >= 0) {\r\n            const lastToken = combo[i - 1]\r\n            if (!checkViability(lastToken, combo[i])) {\r\n              status = false\r\n              break\r\n            }\r\n          }\r\n        }\r\n\r\n        if (status) {\r\n          idxToKeep.push(comboIdx)\r\n        }\r\n\r\n        //  End of allGroupingPermutations loop\r\n      }\r\n\r\n      // Now we have the allGroupingPermutations indexes that are plausible\r\n\r\n      // Array to hold the elements at specified indices\r\n      const filtered = []\r\n      // Loop through each index and push the corresponding element into the filtered array\r\n      idxToKeep.forEach((index) => {\r\n        if (index >= 0 && index < allGroupingPermutations.length) {\r\n          filtered.push(allGroupingPermutations[index])\r\n        } else {\r\n          // Handle out-of-bounds indices if needed\r\n          console.error(`Index ${index} is out of bounds.`)\r\n        }\r\n      })\r\n\r\n      const aggregated_list = []\r\n      const combo_set = []\r\n      for (let i = 0; i < filtered.length; i++) {\r\n        const combo = filtered[i]\r\n        const stickers_matching_tokens = []\r\n        let status = true\r\n\r\n        for (const positionalToken of combo) {\r\n          const list_of_stickers_match =\r\n            tokenizationMap[positionalToken.stringifySelf()] || null\r\n\r\n          if (list_of_stickers_match !== null) {\r\n            stickers_matching_tokens.push(list_of_stickers_match)\r\n          } else {\r\n            status = false\r\n          }\r\n        }\r\n\r\n        // If all tokens exist we need to check if the combination will result in >5 stickers accounting for coverings\r\n        if (status) {\r\n          let stickersNeeded = combo.length\r\n          if (\r\n            combo[0].location === Token.END ||\r\n            combo[0].location === Token.MID\r\n          ) {\r\n            stickersNeeded = stickersNeeded + 1\r\n          }\r\n\r\n          if (\r\n            combo[combo.length - 1].location === Token.START ||\r\n            combo[combo.length - 1].location === Token.MID\r\n          ) {\r\n            stickersNeeded = stickersNeeded + 1\r\n          }\r\n\r\n          if (stickersNeeded <= 5) {\r\n            combo_set.push(combo)\r\n            aggregated_list.push(stickers_matching_tokens)\r\n          }\r\n        }\r\n      }\r\n\r\n      if (combo_set.length > 0) {\r\n        for (let k = 0; k < combo_set.length; k++) {\r\n          const combo = combo_set[k]\r\n\r\n          const possibleTextSplit = []\r\n          for (let j = 0; j < combo.length; j++) {\r\n            const matchedPart = combo[j].text\r\n            const matchedLoc = combo[j].location\r\n            const lst = aggregated_list[k][j]\r\n\r\n            const stickers = lst\r\n            const result_to_add = {\r\n              matchedPart: matchedPart,\r\n              matchedLoc: matchedLoc,\r\n              stickers: stickers,\r\n            }\r\n\r\n            possibleTextSplit.push(result_to_add)\r\n          }\r\n\r\n          results.push(possibleTextSplit)\r\n        }\r\n      }\r\n    }\r\n\r\n    return results\r\n  }\r\n  const tokenizationMap = await getTokenizations()\r\n\r\n  // results consists of all N permutations of tokens that spell input with various locations\r\n  const results = stickerfyWord(input, tokenizationMap)\r\n\r\n  return results\r\n}\r\n\r\nasync function getTokenizations() {\r\n  const response = await fetch(\r\n    \"http://127.0.0.1:5500/sticker-composer/tokenized_player_names.json\"\r\n  )\r\n  // <Token:${token-location}:${token-string}>\r\n  const tokenizationMap = await response.json()\r\n\r\n  return tokenizationMap\r\n}\r\n\r\nasync function getStickers() {\r\n  const response = await fetch(\r\n    \"http://127.0.0.1:5500/sticker-composer/stickers.json\"\r\n  )\r\n  const allStickers = await response.json()\r\n  return allStickers\r\n    .filter((sticker) => !sticker.ignore)\r\n    .filter(\r\n      (sticker) =>\r\n        sticker.description.toLowerCase().includes(\"autographed\") ||\r\n        sticker.matching\r\n    )\r\n}\r\n"],
  "mappings": "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",
  "names": ["ctx", "result", "tokenizationMap", "results"]
}
